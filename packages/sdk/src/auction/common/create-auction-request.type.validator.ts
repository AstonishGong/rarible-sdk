// @ts-nocheck
// eslint-disable
// This file is generated by create-validator-ts
import Ajv from 'ajv';
import * as apiTypes from './create-auction-request.type';

export const SCHEMA = {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$ref": "#/definitions/CreateAuctionRequest",
    "definitions": {
        "CreateAuctionRequest": {
            "type": "object",
            "properties": {
                "makeAssetType": {
                    "$ref": "#/definitions/AssetTypeRequest"
                },
                "amount": {
                    "$ref": "#/definitions/BigNumber"
                },
                "takeAssetType": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/EthAssetType"
                        },
                        {
                            "$ref": "#/definitions/Erc20AssetType"
                        }
                    ]
                },
                "minimalStepDecimal": {
                    "$ref": "#/definitions/BigNumberValue"
                },
                "minimalPriceDecimal": {
                    "$ref": "#/definitions/BigNumberValue"
                },
                "duration": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "buyOutPriceDecimal": {
                    "$ref": "#/definitions/BigNumberValue"
                },
                "payouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "originFees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                }
            },
            "required": [
                "makeAssetType",
                "amount",
                "takeAssetType",
                "minimalStepDecimal",
                "minimalPriceDecimal",
                "duration",
                "buyOutPriceDecimal",
                "payouts",
                "originFees"
            ],
            "additionalProperties": false
        },
        "AssetTypeRequest": {
            "anyOf": [
                {
                    "$ref": "#/definitions/Erc721AssetType"
                },
                {
                    "$ref": "#/definitions/Erc721LazyAssetType"
                },
                {
                    "$ref": "#/definitions/Erc1155AssetType"
                },
                {
                    "$ref": "#/definitions/Erc1155LazyAssetType"
                },
                {
                    "$ref": "#/definitions/NftAssetType"
                },
                {
                    "$ref": "#/definitions/CryptoPunksAssetType"
                },
                {
                    "$ref": "#/definitions/CollectionAssetType"
                }
            ]
        },
        "Erc721AssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ERC721"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "$ref": "#/definitions/BigNumber"
                }
            },
            "required": [
                "assetClass",
                "contract",
                "tokenId"
            ],
            "additionalProperties": false
        },
        "Address": {
            "type": "string"
        },
        "BigNumber": {
            "type": "string"
        },
        "Erc721LazyAssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ERC721_LAZY"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "$ref": "#/definitions/BigNumber"
                },
                "uri": {
                    "type": "string"
                },
                "creators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "royalties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Binary"
                    }
                }
            },
            "required": [
                "assetClass",
                "contract",
                "tokenId",
                "uri",
                "creators",
                "royalties",
                "signatures"
            ],
            "additionalProperties": false
        },
        "Part": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/Address"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": [
                "account",
                "value"
            ],
            "additionalProperties": false
        },
        "Binary": {
            "type": "string"
        },
        "Erc1155AssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ERC1155"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "$ref": "#/definitions/BigNumber"
                }
            },
            "required": [
                "assetClass",
                "contract",
                "tokenId"
            ],
            "additionalProperties": false
        },
        "Erc1155LazyAssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ERC1155_LAZY"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "$ref": "#/definitions/BigNumber"
                },
                "uri": {
                    "type": "string"
                },
                "supply": {
                    "$ref": "#/definitions/BigNumber"
                },
                "creators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "royalties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Binary"
                    }
                }
            },
            "required": [
                "assetClass",
                "contract",
                "tokenId",
                "uri",
                "supply",
                "creators",
                "royalties",
                "signatures"
            ],
            "additionalProperties": false
        },
        "NftAssetType": {
            "type": "object",
            "properties": {
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "contract",
                "tokenId"
            ],
            "additionalProperties": false
        },
        "CryptoPunksAssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "CRYPTO_PUNKS"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                },
                "tokenId": {
                    "type": "number"
                }
            },
            "required": [
                "assetClass",
                "contract",
                "tokenId"
            ],
            "additionalProperties": false
        },
        "CollectionAssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "COLLECTION"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                }
            },
            "required": [
                "assetClass",
                "contract"
            ],
            "additionalProperties": false
        },
        "EthAssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ETH"
                }
            },
            "required": [
                "assetClass"
            ],
            "additionalProperties": false
        },
        "Erc20AssetType": {
            "type": "object",
            "properties": {
                "assetClass": {
                    "type": "string",
                    "const": "ERC20"
                },
                "contract": {
                    "$ref": "#/definitions/Address"
                }
            },
            "required": [
                "assetClass",
                "contract"
            ],
            "additionalProperties": false
        },
        "BigNumberValue": {
            "$ref": "#/definitions/BigNumber.Value"
        },
        "BigNumber.Value": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "number"
                },
                {
                    "$ref": "#/definitions/BigNumber.Instance"
                }
            ]
        },
        "BigNumber.Instance": {
            "type": "object",
            "properties": {
                "c": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null."
                },
                "e": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null."
                },
                "s": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The sign of the value of this BigNumber, -1, 1, or null."
                }
            },
            "required": [
                "c",
                "e",
                "s"
            ]
        }
    }
};
const ajv = new Ajv({ removeAdditional: true }).addSchema(SCHEMA, "SCHEMA");
export function validateCreateAuctionRequest(payload: unknown): apiTypes.CreateAuctionRequest {
  if (!isCreateAuctionRequest(payload)) {
    const error = new Error('invalid payload: CreateAuctionRequest');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isCreateAuctionRequest(payload: unknown): payload is apiTypes.CreateAuctionRequest {
  /** Schema is defined in {@link SCHEMA.definitions.CreateAuctionRequest } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/CreateAuctionRequest" });
  return ajvValidate(payload);
}
